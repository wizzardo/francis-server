import java.text.SimpleDateFormat

apply plugin: 'java'
apply plugin: 'application'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'com.wizzardo'
version '0.1-SNAPSHOT'

mainClassName = "com.wizzardo.francis.App"

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.wizzardo:epoll:0.2+'
    compile 'com.wizzardo:http:0.2+'
    compile 'com.wizzardo:datadog-jvm:0.4+'
    compile 'com.wizzardo.tools:tools:0.17+'

//    compile 'mysql:mysql-connector-java:5.1.41'
    compile 'org.postgresql:postgresql:9.4.1212'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}


task fatJar(type: Jar) {
    def revision = "git rev-parse HEAD".execute().text.trim()
    def branchName = System.getenv().get('GIT_BRANCH')
    if (!branchName) {
        branchName = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
        if (branchName == revision) {
            branchName = "git branch -a --contains ${"git rev-parse --verify HEAD".execute().text}".execute()
                    .text.trim().readLines()
                    .find({ it.contains('origin/') })?.with({ it.split('origin/')[1].trim() }) ?: ''
        }
    }

    manifest {
        attributes(
                "Main-Class": "${{ -> project.hasProperty('mainClassName') ? mainClassName : '' }}",
                "gitRevision": revision,
                "gitBranch": branchName,
                "buildTime": new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").with({ it.setTimeZone(TimeZone.getTimeZone("UTC")); it }).format(new Date()),
                "version": "${{ -> version }}",
                "appName": project.name
        )
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}